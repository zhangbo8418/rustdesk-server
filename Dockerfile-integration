FROM ubuntu:jammy as builder
ENV NODE_VERSION=20.13.1
RUN apt-get update && apt-get install -y curl build-essential debhelper devscripts pkg-config libssl-dev zip
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
RUN mkdir /build
COPY src /build/src
COPY libs /build/libs
COPY Cargo.toml /build/Cargo.toml
COPY Cargo.lock /build/Cargo.lock
COPY build.rs /build/build.rs
COPY db_v2.sqlite3 /build/db_v2.sqlite3
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash \
    && . /root/.nvm/nvm.sh && nvm install ${NODE_VERSION} && nvm use ${NODE_VERSION} \
    && . /root/.cargo/env && cd /build \ 
    && cargo update -p sctgdesk-api-server \
    && DATABASE_URL=sqlite://$(pwd)/db_v2.sqlite3 cargo build --release
RUN mkdir -p /build/ubuntu-jammy/bin \
    && cp /build/target/release/hbbr /build/ubuntu-jammy/bin/ \
    && cp /build/target/release/hbbs /build/ubuntu-jammy/bin/ \
    && cp /build/target/release/rustdesk-utils /build/ubuntu-jammy/bin/
COPY systemd /build/ubuntu-jammy/systemd
COPY debian /build/ubuntu-jammy/debian
RUN cd /build/ubuntu-jammy \
    && cat debian/control.tpl | sed "s/{{ ARCH }}/$(dpkg --print-architecture)/" > debian/control \
    && rm debian/control.tpl \
    && debuild -i -us -uc -b -a$(dpkg --print-architecture)
COPY oauth2.toml /build/ubuntu-jammy/bin/oauth2.toml

FROM ubuntu:jammy
RUN mkdir -p /usr/local/share/debpackages
COPY --from=builder /build/*.deb /usr/local/share/debpackages
COPY --from=builder /build/target/release/hbbs /usr/local/bin/hbbs
COPY --from=builder /build/ubuntu-jammy/bin/oauth2.toml /usr/local/bin/oauth2.toml
COPY --from=builder /build/target/release/hbbr /usr/local/bin/hbbr
COPY --from=builder /build/target/release/rustdesk-utils /usr/local/bin/rustdesk-utils
